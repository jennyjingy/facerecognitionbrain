{"ast":null,"code":"var _jsxFileName = \"/Users/yaohuijing/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '3d2f9d3bba3f4759a10537b90da6d680'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 900\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      // console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          imageUrl = _this$state.imageUrl,\n          box = _this$state.box,\n          route = _this$state.route,\n          isSignedIn = _this$state.isSignedIn;\n    return React.createElement(\"div\", {\n      className: \"APP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: isSignedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), this.state.route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yaohuijing/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","Particles","Clarifai","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: '3d2f9d3bba3f4759a10537b90da6d680'\n });\n\n\nconst particleOptions = {\n  \n    particles: {\n      number: {\n        value:100,\n        density: {\n          enable: true,\n          value_area: 900\n        }\n      }\n    }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id:'',\n    name:'',\n    email:'',\n    entries:0,\n    joined:''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState\n  }\n  loadUser = (data) =>{\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }\n  }\n    )\n  }\n\n  \n  calculateFaceLocation = (data) => {\n   const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n   const image = document.getElementById('inputimage');\n   const width = Number(image.width);\n   const height = Number(image.height);\n   return {\n     leftCol: clarifaiFace.left_col * width,\n     topRow: clarifaiFace.top_row * height,\n     rightCol: width - (clarifaiFace.right_col * width),\n     bottomRow : height - (clarifaiFace.bottom_row * height)\n   }\n  }\n\n  displayFaceBox = (box) => {\n    // console.log(box);\n    this.setState({box: box})\n  }\n\n\n  onInputChange = (event) => {\n   this.setState({input:event.target.value});\n  }\n\n  onButtonSubmit= () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n     this.state.input)\n      .then(response => {\n        if(response){\n          fetch('http://localhost:3000/image',{\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id:this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user,{entries:count}))\n\n        })\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      \n      .catch(err => console.log(err));\n  \n  }\n  onRouteChange= (route) => {\n    if (route === 'signout') {\n    this.setState(initialState);\n    }\n    else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route:route})\n  }\n\n  render() {\n    const {imageUrl, box, route, isSignedIn} = this.state;\n    return(\n   <div className='APP'>\n      <Particles className='particles'\n      params={particleOptions}\n            />\n      <Navigation \n      onRouteChange={this.onRouteChange}\n      isSignedIn={isSignedIn}\n      />\n      { this.state.route === 'home' \n      ? <div>\n          <Logo />\n          <Rank \n          name={this.state.user.name}\n          entries={this.state.user.entries} \n          />\n          <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit} />\n          <FaceRecognition box={box} imageUrl={imageUrl} />\n        </div>\n      : (\n      route === 'signin' ?\n      <Signin \n      loadUser={this.loadUser}\n      onRouteChange={this.onRouteChange} />:\n      <Register \n      loadUser={this.loadUser}\n      onRouteChange={this.onRouteChange}\n       />\n      )\n    }\n\n\n   </div>\n    );\n   \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}